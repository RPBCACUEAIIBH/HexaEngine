#! /bin/bash

### Instructions ###
# The template should run as is, but it does nothing. Comments will tell you where to insert your code.
# WDir should not exist it will be created, (if running as root ram will be mounted) and files copied there when the scipt runs, and it should normally be a location in RAM. This way it's faster to read/write files, and does not hurt solid state drive either... The point is if you're calling another script, WDir should be passed as a variable to it if it has anything to do with data in WDir.
# Threads can read the same variables/input files, but they must only write their own output files, and variables to avoid interference, and data corruption.

### Finding roots ###
# 4 line(s) hiddebn by BashTool! Marker: 9355 Your notes: Finding roots

### Variables ###
# 7 line(s) hiddebn by BashTool! Marker: 141 Your notes: Variables

### Functions ###
# 27 line(s) hiddebn by BashTool! Marker: 11319 Your notes: Function "Message"

# 23 line(s) hiddebn by BashTool! Marker: 32489 Your notes: Function "Listen"

# 22 line(s) hiddebn by BashTool! Marker: 3451 Your notes: Function "Unload"

# 18 line(s) hiddebn by BashTool! Marker: 5830 Your notes: Function "Feed"

# 36 line(s) hiddebn by BashTool! Marker: 11528 Your notes: Function "Thread"

### Initialization ###
# 37 line(s) hiddebn by BashTool! Marker: 511 Your notes: Options, Log file, Root check
# 15 line(s) hiddebn by BashTool! Marker: 15903 Your notes: Initial Variables
# 46 line(s) hiddebn by BashTool! Marker: 18654 Your notes: Work Directory, Mounting RAM, etc.
# 28 line(s) hiddebn by BashTool! Marker: 31985 Your notes: Loading GameData
# 9 line(s) hiddebn by BashTool! Marker: 12386 Your notes: Preparing threads
touch $WDir/VThreadDummy
### Execution ###
T1=$(date -Ins)
Message "Done preparing at: $T1" I L
# Here's the place for initial operations.

while [[ $Order != "Stop" ]]
do
  if [[ $Order == "Run" && ${DeepSleep[0]} -ge $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]]
  then
    Message "Main process active!" I L
  fi
  for Thread in $(seq $ThreadNumber)
  do
    if [[ $(grep "State" "$WDir/Thread$Thread" | awk '{ print $2 }') == "I" && $Order == "Run" ]]
    then
      Unload $Thread
      Feed $Thread
      if [[ ${DeepSleep[$Thread]} -ge $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]] # If it has been paused it must wake the threads
      then
        DeepSleep[$Thread]=0
        Message "Waking Thread$Thread..." I L
      fi
    fi
  done
  for Thread in $(ls "$WDir/VThread"*) # << This will only work with path without special characters and/or spaces
  do
    if [[ -f $Thread && $Thread != "$WDir/VThreadDummy" ]] # VThreadDummy keeps it from throwing lots of errors when no VThread connected...
    then
      if [[ $(grep "State" "$Thread" | awk '{ print $2 }') == "S" ]]
      then
        Unload $Thread
        sed -i 's/State: S/State: D/g' $Thread
      else
        if [[ $(grep "State" $Thread | awk '{ print $2 }') == "I" && $Order == "Run" ]]
        then
          Unload $Thread
          Feed $Thread
        fi
      fi
    fi
  done
  if [[ $Order == "Run" ]] # Main process should not go into deep sleep if $Order == "Run"
  then
    DeepSleep[0]=0
  fi
  ### Data Syncing ###
  # Processing here if all the batches of the task has been completed and no new process started yet...

  if [[ ${DeepSleep[0]} -lt $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]]
  then
    DeepSleep[0]=$(( ${DeepSleep[0]} + 1 ))
    sleep $(grep "FeedFrequency" "$ConfigFile" | awk '{ print $2 }')
  else
    Message "Main process is sleeping..." I L
    sleep $(grep "SleepFor" "$ConfigFile" | awk '{ print $2 }')
  fi
  Listen
done

# 55 line(s) hiddebn by BashTool! Marker: 13883 Your notes: Waitng for threads to finish, unloading, etc.

### Finishing ###
# 30 line(s) hiddebn by BashTool! Marker: 24392 Your notes: Making backup, Compressing GameData and Ending
