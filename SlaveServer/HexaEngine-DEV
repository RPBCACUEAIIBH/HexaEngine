#! /bin/bash

# 5 line(s) hiddebn by BashTool! Marker: 20426 Your notes: Finding roots

# 6 line(s) hiddebn by BashTool! Marker: 2525 Your notes: Variables

### Functions ###
# 27 line(s) hiddebn by BashTool! Marker: 8791 Your notes: Function "Message"

# 23 line(s) hiddebn by BashTool! Marker: 1551 Your notes: Function "Listen"

# 16 line(s) hiddebn by BashTool! Marker: 18380 Your notes: Function "Unload"

# 12 line(s) hiddebn by BashTool! Marker: 9628 Your notes: Function "Feed"

# 36 line(s) hiddebn by BashTool! Marker: 24793 Your notes: Function "Thread"

# 20 line(s) hiddebn by BashTool! Marker: 15617 Your notes: Initialisation

# 17 line(s) hiddebn by BashTool! Marker: 7567 Your notes: Log file
# 15 line(s) hiddebn by BashTool! Marker: 15385 Your notes: Loading Variables
# 46 line(s) hiddebn by BashTool! Marker: 7575 Your notes: WDir
# 9 line(s) hiddebn by BashTool! Marker: 13964 Your notes: Preparing threads
### Execution ###
T1=$(date -Ins)
Message "Done preparing at: $T1" I L
# Here's the place for initial operations.

while [[ $Order != "Stop" ]]
do
  if [[ $Order == "Run" && ${DeepSleep[0]} -ge $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]]
  then
    Message "Main process active!" I L
  fi
  for Thread in $(seq $ThreadNumber)
  do
    if [[ $(grep "State" "$WDir/Thread$Thread" | awk '{ print $2 }') == "I" && $Order == "Run" ]]
    then
      Unload $Thread
      Feed $Thread
      if [[ ${DeepSleep[$Thread]} -ge $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]] # If it has been paused it must wake the threads
      then
        DeepSleep[$Thread]=0
        Message "Waking Thread$Thread..." I L
      fi
    fi
  done
  if [[ $Order == "Run" ]] # Main process should not go into deep sleep if $Order == "Run"
  then
    DeepSleep[0]=0
  fi
  # You can post process on the fly here, however it may delay threads(unless 1 thread is reserved for post processign on the fly by limiting the threads to ThreadLimit - 1 in the Listen function), and also may not be in the correct order... You may wanna make this step a function, cause you will need to execute this step below, after stopping all threads otherwise data from the last running threads may be lost if Order is set to "Stop". I'd still recommend the entire post processing after all threads ware stopped.
  if [[ ${DeepSleep[0]} -lt $(grep "SleepAfter" "$ConfigFile" | awk '{ print $2 }') ]]
  then
    DeepSleep[0]=$(( ${DeepSleep[0]} + 1 ))
    sleep $(grep "FeedFrequency" "$ConfigFile" | awk '{ print $2 }')
  else
    Message "Main process is sleeping..." I L
    sleep $(grep "SleepFor" "$ConfigFile" | awk '{ print $2 }')
  fi
  Listen
done

# 30 line(s) hiddebn by BashTool! Marker: 1394 Your notes: Waiting for threads...

# 11 line(s) hiddebn by BashTool! Marker: 1909 Your notes: Ending...
